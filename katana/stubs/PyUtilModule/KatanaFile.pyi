# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import AssetAPI as AssetAPI
import Callbacks as Callbacks
import ConfigurationAPI_cmodule as Configuration
import PyUtilModule.FileUtils as FileUtils
import NodegraphAPI as NodegraphAPI
import Nodes2DAPI as Nodes2DAPI
import Nodes3DAPI as Nodes3DAPI
import PyXmlIO
import PyUtilModule.ScenegraphBookmarkManager as ScenegraphBookmarkManager
import PyUtilModule.UndoEntries as UndoEntries
import Utils as Utils
import typing
from _typeshed import Incomplete
from typing import Set, Tuple

MAX_CRASH_FILES: int
_CrashActions: int
_CrashDisable: bool
_CrashFilePreviouslySaved: str
_CrashIndex: int
_FileDirty: bool
_FileDirtyStates: list
_FileLoadedFromCrashFile: bool
_FileVersionedOnLoad: bool
_TimeOfFirstUnsavedAction: float
_TimeOfLastAutosave: float
__PasteHandlers: list

def AllowFileOverwrite() -> tuple: ...
def CrashSave(forceSave: bool = ..., logCompletion: bool = ...): ...
def CrashSaveDisable(): ...
def CrashSaveEnable(): ...
def CreateSceneAsset(asset: str, versionUp: bool = ..., publish: bool = ..., extraOptionsDict: dict = ...) -> str: ...
def Export(fileNameOrAssetId: str, nodes: list[NodegraphAPI.Node], extraOptionsDict: Incomplete | None = ...) -> str: ...
def GetCrashActions() -> int: ...
def GetCrashTime() -> float: ...
def GetKatanaXMLElement(filename): ...
def GetNextCrashFileName(): ...
def GetTimeOfFirstUnsavedAction() -> float | None: ...
def GetViableCrashFiles(smartPrune: bool = ...) -> list: ...
def Import(fileName: str, floatNodes: bool = ..., parentNode: Incomplete | None = ...) -> list[NodegraphAPI.Node]: ...
def IsFileDirty() -> bool: ...
def IsFileSavedAsAsset() -> bool: ...
def Load(fileName: str, isCrashFile: bool = ...): ...
def New(): ...
def Paste(nodeXML: str, parent: NodegraphAPI.GroupNode): ...
def PopFileDirtyState(): ...
def PostCreateSceneAsset(asset: str, versionUp: bool = ..., publish: bool = ..., extraOptionsDict: dict = ...) -> str: ...
def PushFileDirtyState(): ...
def RegisterPasteHandler(cb: typing.Callable): ...
def Revert(): ...
def Save(fileNameOrAssetId: str, extraOptionsDict: Incomplete | None = ...) -> str: ...
def SetFileDirty(): ...
def WasFileLoadedFromCrashFile() -> bool: ...
def WasFileVersionedOnLoad() -> bool: ...
def _CleanupRenderNodes(nodes): ...
def _ContainsModifiedLiveGroupNodes(): ...
def _CrashHandlerUndoCB(): ...
def _CrashSaveImpl(filename: str, element: PyXmlIO.Element, logCompletion: bool) -> bool: ...
def _EvaluateFilename(fileNameOrAssetId: str) -> str: ...
def _ExportNodesToFile(fileNameOrAssetId, nodes: list): ...
def _FindRenderNodes(nodes, renderNodes): ...
def _RestoreFileDirty(event, eventid, **kwargs): ...
def _SaveAndPublish(fileNameOrAssetId, exportNodes: Incomplete | None = ..., extraOptionsDict: Incomplete | None = ...) -> str | None: ...
def _SaveFile(fileNameOrAssetId: str): ...
def _SaveFileDirty(event, eventid, **kwargs): ...
def _SetKatanaSceneNameAndSourceFile(fileNameOrAssetId): ...
