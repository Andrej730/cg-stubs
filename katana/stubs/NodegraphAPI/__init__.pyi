# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import NodegraphAPI.BypassParameterManager as BypassParameterManager
import NodegraphAPI.CallbackTypes as CallbackTypes
import Callbacks as Callbacks
import NodegraphAPI.Constants as Constants
import NodegraphAPI.DynamicParameters as DynamicParameters
import NodegraphAPI.ExpressionModule as ExpressionModule
import NodegraphAPI.Flavor as Flavor
import PyFnAttribute as FnAttribute
import NodegraphAPI.GroupStack as GroupStack
import NodegraphAPI.InteractiveRenderFilters as InteractiveRenderFilters
import NodegraphAPI.LiveGroup as LiveGroup
import NodegraphAPI.NodeDelegateManager as NodeDelegateManager
import NodegraphAPI.NodeExtensions as NodeExtensions
import NodegraphAPI.NodeGraphViewExtensions as NodeGraphViewExtensions
import NodegraphAPI.NodeNameFromParamManager as NodeNameFromParamManager
import NodegraphAPI.NodeXmlIO as NodeXmlIO
import NodegraphAPI_cmodule as NodegraphAPI_cmodule
import NodegraphAPI.NodegraphChangedEvents as NodegraphChangedEvents
import NodegraphAPI.NodegraphGlobals as NodegraphGlobals
import NodegraphAPI.ParameterValueOption as ParameterValueOption
import PyFnAttribute
import NodegraphAPI.RenderFilter as RenderFilter
import NodegraphAPI.RenderScript as RenderScript
import NodegraphAPI.StructuredPorts as StructuredPorts
import NodegraphAPI.UserParameters as UserParameters
import NodegraphAPI.Util as Util
import Utils as Utils
import NodegraphAPI.Version as Version
import NodegraphAPI.Xio as Xio
import typing
from NodegraphAPI.DynamicParameters import CreateGroupParameter as CreateGroupParameter, CreateNumberParameter as CreateNumberParameter, CreateStringParameter as CreateStringParameter, DeleteParameter as DeleteParameter
from NodegraphAPI.ExpressionModule import FCurveLookup as FCurveLookup, GetExpressionGlobalValue as GetExpressionGlobalValue, SetExpressionGlobalValue as SetExpressionGlobalValue, SetupExpressionGlobalScopeFromRootNode as SetupExpressionGlobalScopeFromRootNode
from NodegraphAPI.Flavor import AddNodeFlavor as AddNodeFlavor, ClearFlavorNodes as ClearFlavorNodes, GetAllFlavors as GetAllFlavors, GetFlavorNodes as GetFlavorNodes, GetNodeFlavors as GetNodeFlavors, NodeMatchesFlavors as NodeMatchesFlavors, RemoveNodeFlavor as RemoveNodeFlavor
from NodegraphAPI.LiveGroup import AssetPublishing as AssetPublishing, CalculateLiveGroupDepth as CalculateLiveGroupDepth, CanBeDifferentFromSource as CanBeDifferentFromSource, ConvertGroupToLiveGroup as ConvertGroupToLiveGroup, IsLiveGroupCachingEnabled as IsLiveGroupCachingEnabled, IsLiveGroupLoadingEnabled as IsLiveGroupLoadingEnabled, LiveGroupNode as LiveGroupNode, LoadAllLiveGroups as LoadAllLiveGroups, LockAllLiveGroups as LockAllLiveGroups, MakeAllLiveGroupsEditable as MakeAllLiveGroupsEditable, MakeAllParentLiveGroupsEditable as MakeAllParentLiveGroupsEditable, SetLiveGroupCachingEnabled as SetLiveGroupCachingEnabled, SetLiveGroupLoadingEnabled as SetLiveGroupLoadingEnabled, UpdateAllLiveGroupSources as UpdateAllLiveGroupSources
from NodegraphAPI.NodeExtensions import DeleteNodeShapeAttr as DeleteNodeShapeAttr, GetAllActiveAttributeEditorNodes as GetAllActiveAttributeEditorNodes, GetAllEditedNodes as GetAllEditedNodes, GetAllFloatingNodes as GetAllFloatingNodes, GetAllSelectedNodes as GetAllSelectedNodes, GetAllSelectedNodesAndParent as GetAllSelectedNodesAndParent, GetAllThumbnailEnabledNodes as GetAllThumbnailEnabledNodes, GetMenuPath as GetMenuPath, GetNodeComment as GetNodeComment, GetNodeModTime as GetNodeModTime, GetNodeParameter as GetNodeParameter, GetNodePosition as GetNodePosition, GetNodeShapeAttr as GetNodeShapeAttr, GetNodeShapeAttrs as GetNodeShapeAttrs, GetViewNode as GetViewNode, GetViewNodes as GetViewNodes, GetViewPortPosition as GetViewPortPosition, IsAttributeEditorNodeActive as IsAttributeEditorNodeActive, IsNodeEdited as IsNodeEdited, IsNodeFloating as IsNodeFloating, IsNodeHidden as IsNodeHidden, IsNodeLockedByParents as IsNodeLockedByParents, IsNodeSelected as IsNodeSelected, IsNodeThumbnailEnabled as IsNodeThumbnailEnabled, IsNodeViewed as IsNodeViewed, Register_NewNode_CB as Register_NewNode_CB, SetAllSelectedNodes as SetAllSelectedNodes, SetAttributeEditorNodeActive as SetAttributeEditorNodeActive, SetMenuPath as SetMenuPath, SetNodeComment as SetNodeComment, SetNodeEdited as SetNodeEdited, SetNodeFloating as SetNodeFloating, SetNodeHidden as SetNodeHidden, SetNodeModTime as SetNodeModTime, SetNodeParameter as SetNodeParameter, SetNodePosition as SetNodePosition, SetNodeSelected as SetNodeSelected, SetNodeShapeAttr as SetNodeShapeAttr, SetNodeShapeNodeAttrs as SetNodeShapeNodeAttrs, SetNodeThumbnailEnabled as SetNodeThumbnailEnabled, SetNodeViewed as SetNodeViewed, SetViewPortPosition as SetViewPortPosition
from NodegraphAPI.NodeXmlIO import BuildNodegraphXmlIO as BuildNodegraphXmlIO, BuildNodesXmlIO as BuildNodesXmlIO, GetUserNodesXmlRootAttrs as GetUserNodesXmlRootAttrs, LoadElementsFromFile as LoadElementsFromFile, LoadElementsFromString as LoadElementsFromString, ParseNodegraphXmlIO as ParseNodegraphXmlIO, ParseNodesXmlIO as ParseNodesXmlIO, SetUserNodesXmlRootAttrs as SetUserNodesXmlRootAttrs
from NodegraphAPI.NodegraphGlobals import CheckNodeType as CheckNodeType, GetAutoKeyAll as GetAutoKeyAll, GetCurrentTime as GetCurrentTime, GetInTime as GetInTime, GetKatanaSceneName as GetKatanaSceneName, GetNodegraphVersionString as GetNodegraphVersionString, GetOriginalProjectAssetID as GetOriginalProjectAssetID, GetOriginalSourceFile as GetOriginalSourceFile, GetOutTime as GetOutTime, GetProjectAssetID as GetProjectAssetID, GetProjectDir as GetProjectDir, GetProjectFile as GetProjectFile, GetRootNode as GetRootNode, GetSourceFile as GetSourceFile, GetTimeIncrement as GetTimeIncrement, GetWorkingInTime as GetWorkingInTime, GetWorkingOutTime as GetWorkingOutTime, IsLoading as IsLoading, IsLoadingAsync as IsLoadingAsync, LoadXmlFromFile as LoadXmlFromFile, LoadXmlFromString as LoadXmlFromString, NeedsRedraw as NeedsRedraw, NewNodegraph as NewNodegraph, ResetAllFloatingCurves as ResetAllFloatingCurves, SetAutoKeyAll as SetAutoKeyAll, SetCurrentTime as SetCurrentTime, SetInTime as SetInTime, SetKatanaSceneName as SetKatanaSceneName, SetNeedsRedraw as SetNeedsRedraw, SetOriginalProjectAssetID as SetOriginalProjectAssetID, SetOriginalSourceFile as SetOriginalSourceFile, SetOutTime as SetOutTime, SetProjectAssetID as SetProjectAssetID, SetRootNode as SetRootNode, SetSourceFile as SetSourceFile, SetTimeIncrement as SetTimeIncrement, SetWorkingInTime as SetWorkingInTime, SetWorkingOutTime as SetWorkingOutTime, UpdatePluginsFromGlobals as UpdatePluginsFromGlobals, WriteKatanaFile as WriteKatanaFile, WriteKatanaString as WriteKatanaString
from NodegraphAPI.PythonRenderScript import PythonRenderScript as PythonRenderScript
from NodegraphAPI.SuperTool import RegisterSuperTool as RegisterSuperTool, SuperTool as SuperTool
from NodegraphAPI_cmodule import Context as Context, GetAllExpressionedParameters as GetAllExpressionedParameters, GetExpressionReferences as GetExpressionReferences, GetNodeGraphContext as GetNodeGraphContext, GraphState as GraphState, GraphStateBuilder as GraphStateBuilder, GroupNode as GroupNode, Node as Node, Parameter as Parameter, Port as Port, PythonGroupNode as PythonGroupNode, PythonNode as PythonNode
from _typeshed import Incomplete

NodeGraphContextParameter: str
RTLD_GLOBAL: int
RTLD_NOW: int
_IsInSynchronousContext: bool
_isNodegraphLoading: bool
useFlags: bool

def AreEventsEnabled(): ...
def AsynchronousContext(*args, **kwds): ...
def BuildAttrFromGroupParameter(parameter: Parameter, graphState: Incomplete | None = ..., multisampleDefault: bool = ..., numberAttrTypeDefault: type[PyFnAttribute.FloatAttribute] = ..., includeEmptyGroups: bool = ..., groupInherit: bool = ...) -> PyFnAttribute.GroupAttribute | None: ...
def BuildAttrFromNumberParameter(parameter: Parameter, graphState: Incomplete | None = ..., multisample: bool = ..., attrType: type[PyFnAttribute.FloatAttribute] = ...) -> attrType | None: ...
def BuildAttrFromStringParameter(parameter: Parameter, graphState: Incomplete | None = ..., multisample: bool = ...) -> PyFnAttribute.StringAttribute | None: ...
def BuildDoubleAttrFromNumberParameter(parameter: Parameter, graphState: Incomplete | None = ..., multisample: bool = ...) -> PyFnAttribute.DoubleAttribute | None: ...
def BuildFloatAttrFromNumberParameter(parameter: Parameter, graphState: Incomplete | None = ..., multisample: bool = ...) -> PyFnAttribute.FloatAttribute | None: ...
def BuildIntAttrFromNumberParameter(parameter: Parameter, graphState: Incomplete | None = ..., multisample: bool = ...) -> PyFnAttribute.IntAttribute | None: ...
def CreateNode(type: str, parent: Incomplete | None = ...) -> Node: ...
def GetAllNodes(includeDeleted: bool = ..., sortByName: bool = ...) -> list[Node]: ...
def GetAllNodesByType(nodeType: str, includeDeleted: bool = ..., sortByName: bool = ...) -> list[Node]: ...
def GetCurrentGraphState(**kwargs): ...
def GetGraphState(timeval: float, **kwargs) -> GraphState: ...
def GetGraphStateAtPort(searchPort: Port, startPort: Port, startGraphState: GraphState) -> GraphState | None: ...
def GetNode(nodeName: str) -> Node | None: ...
def GetNodeContext(node): ...
def GetNodeTypes() -> list[str]: ...
def GetSampleTimes(shutterOpen: float, shutterClose: float, maxTimeSamples: int, useSinglePrecision: bool = ...) -> tuple[float, ...]: ...
def GetSampleTimesFromGraphState(graphState: GraphState, useSinglePrecision: bool = ...) -> tuple[float, ...]: ...
def GetSingleSampleTimeFromGraphState(graphState: GraphState) -> float: ...
def InteractiveContext(*args, **kwds): ...
def IsInSynchronousContext() -> bool: ...
def IsParameterConstant(parameter: Parameter) -> bool: ...
def NonInteractiveContext(*args, **kwds): ...
def PopExpressionCache(): ...
def PushExpressionCache(): ...
def RegisterExtension(ext): ...
def RegisterPythonGroupType(type: str, ctor): ...
def RegisterPythonNodeFactory(type: str, factory: typing.Callable): ...
def RegisterPythonNodeType(type: str, ctor): ...
def SetEventsEnabled(state: int): ...
def StackedLocalGraphState(*args, **kwds) -> None: ...
def SynchronousContext(*args, **kwds): ...
def UnlockedNode(*args, **kwds): ...
def __loadBeginCallback(eventType, eventID, **kwargs): ...
def __loadEndCallback(eventType, eventID, **kwargs): ...
def __nodeCreateCallback(eventType, eventID, **kwargs): ...
def __nodeDeleteCallback(eventType, eventID, **kwargs): ...