# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import CacheManager as CacheManager
import ConfigurationAPI_cmodule as Configuration
import NodegraphAPI.NodeExtensions as NodeExtensions
import NodegraphAPI
import NodegraphAPI_cmodule as NodegraphAPI_cmodule
import NodegraphAPI.NodegraphGlobals as NodegraphGlobals
import PyXmlIO as PyXmlIO
import PyResolutionTableFn as ResolutionTable
import Utils as Utils
import NodegraphAPI.Version as Version
from NodegraphAPI_cmodule import Context as Context
from _typeshed import Incomplete
from typing import Set, Tuple

global_reservedNodesXmlRootAttrs: set
global_userNodesXmlRootAttrs: dict

def BuildNodegraphXmlIO(forcePersistant: bool = ..., opaqueParams: Incomplete | None = ..., isAutoSave: bool = ...): ...
def BuildNodesXmlIO(nodes: list[NodegraphAPI.Node], forcePersistant: bool = ..., opaqueParams: Incomplete | None = ..., requireSiblings: bool = ..., progressCallback: Incomplete | None = ..., includeNonPersistentNodes: bool = ...) -> PyXmlIO.Element | None: ...
def GetRootParams(): ...
def GetUserNodesXmlRootAttrs(): ...
def LoadElementsFromFile(fileName, versionUp: bool = ...): ...
def LoadElementsFromString(xmlString, versionUp: bool = ...): ...
def ParseNodegraphXmlIO(element: PyXmlIO.Element, sourcePath: str = ..., isCrashFile: bool = ...): ...
def ParseNodesXmlIO(element: PyXmlIO.Element, emit: bool = ..., floatNodes: bool = ..., sourcePath: str = ..., loadLiveGroups: bool = ..., lockLiveGroups: bool = ..., isParentContextNME: bool = ...) -> list: ...
def SetUserNodesXmlRootAttrs(attrDict): ...
def _BeginLoadState(emit): ...
def _EndLoadState(emit, oldLoadState): ...
def _FindRootElements(element): ...
def _GetDefaultAssetPlugin(): ...
def _GetDefaultFileSequencePlugin(): ...
def _GetDefaultResolutionString(): ...
def _LoadCleanup(unresolvedLinks, renamingMap): ...
def _LoadLiveGroupShared(node, origNodeName, refElement, sharedElement, unresolvedLinks, parsedLiveGroupAssetIds): ...
def _LoadNodeXmlIO(nodeElm, parentNode, addRootParameters, sharedElement, unresolvedLinks, renamingMap, parsedLiveGroupAssetIds, isParentContextNME: bool = ...): ...
def _LoadPortXmlIO(portElm, node, unresolvedLinks): ...
def _ReportNodeError(node, message, exc_info: bool = ...): ...
def _SaveLiveGroupShared(node: NodegraphAPI.LiveGroupNode, nodeElement: PyXmlIO.Element, sharedElement: PyXmlIO.Element, progressCallback: Incomplete | None = ...) -> bool: ...
def _SaveNodeXmlIO(node: NodegraphAPI.Node, sharedElement: PyXmlIO.Element, forcePersistant: bool, isAutoSave: bool, isTopLevelNode: bool, progressCallback: Incomplete | None = ..., includeNonPersistentNodes: bool = ...) -> PyXmlIO.Element | None: ...
def _SavePortXmlIO(node, port): ...
def _UpdateNodesBypass(node, sampleTime): ...
