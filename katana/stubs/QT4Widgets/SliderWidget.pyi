# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import PyQt5.QtCore
import PyQt5.QtWidgets
from _typeshed import Incomplete
from typing import ClassVar

_PLabelCache: dict
_gradientColors: dict
_tenths: list

class SliderBase:
    def __init__(self, range: Incomplete | None = ..., center: Incomplete | None = ..., axisExponent: Incomplete | None = ..., gradient: Incomplete | None = ..., integer: Incomplete | None = ...): ...
    def _SliderBase__computeAutoAxisExponent(self): ...
    def _SliderBase__drawLabelText(self, painter, value, text, centerLine_y, textPen, labelBounds): ...
    def _SliderBase__measureLabelBounds(self, value, text): ...
    def _clearLabelsCache(self): ...
    def _doDrag(self, windowLocalX): ...
    def _doPaint(self, p, palette): ...
    def _endDrag(self, windowLocalX): ...
    def _getToggleComponentEnabled(self): ...
    def _isInDrag(self): ...
    def _toggleComponent(self): ...
    def getReadOnly(self): ...
    def getValue(self): ...
    def isPreselectionActive(self): ...
    def normalizedValueToValue(self, normValue): ...
    def normalizedValueToWindowPosition(self, normValue): ...
    def setAxisExponent(self, exponent): ...
    def setCenter(self, centerVal): ...
    def setColor(self, c): ...
    def setGradient(self, gradientName): ...
    def setHasFocus(self, hasFocus): ...
    def setInteger(self, isInt): ...
    def setRange(self, val1, val2): ...
    def setReadOnly(self, readOnly, disableComponentToggle: Incomplete | None = ...): ...
    def setValue(self, value): ...
    def valueToNormalizedValue(self, value): ...
    def valueToWindowPosition(self, value): ...
    def windowPositionToNormalizedValue(self, pos): ...
    def windowPositionToValue(self, pos, applyLabelSnapping: bool = ...): ...

class SliderWidget(PyQt5.QtWidgets.QWidget, SliderBase):
    toggleComponent: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    valueChanged: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, parent, fontScale: Incomplete | None = ..., **kwargs): ...
    def _displayChanged(self): ...
    def _toggleComponent(self): ...
    def _valueChanged(self, value, final): ...
    def enterEvent(self, ev): ...
    def leaveEvent(self, ev): ...
    def mouseMoveEvent(self, ev): ...
    def mousePressEvent(self, ev): ...
    def mouseReleaseEvent(self, ev): ...
    def paintEvent(self, ev): ...
    def resizeEvent(self, ev): ...
    def sizeHint(self): ...
    def sizePolicy(self): ...

def DoesLineSegmentIntersect(testLine, lineList, extraPadding: int = ...): ...
def GetPrioritizedLabels(minVal, maxVal, midVal: Incomplete | None = ..., onlyInts: bool = ...): ...
def cfit(value, oldmin, oldmax, newmin, newmax): ...
def clamp01(value): ...
def equalWithRelError(v1, v2, e): ...
def isinrange(value, minVal, maxVal): ...
def isint(value): ...
def roundToOneDigit(val): ...