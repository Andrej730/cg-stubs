import Boost.Python
import pxr.UsdGeom
from typing import Any, ClassVar, overload

class Field3DAsset(FieldAsset):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def CreateFieldDataTypeAttr(self, arg1: Field3DAsset, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateFieldPurposeAttr(self, arg1: Field3DAsset, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Define(self, stage: Stage, path: Path) -> Field3DAsset: ...
    def Get(self, stage: Stage, path: Path) -> Field3DAsset: ...
    def GetFieldDataTypeAttr(self, arg1: Field3DAsset) -> Attribute: ...
    def GetFieldPurposeAttr(self, arg1: Field3DAsset) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: Field3DAsset) -> object: ...
    def __reduce__(self) -> Any: ...

class FieldAsset(FieldBase):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def CreateFieldDataTypeAttr(self, arg1: FieldAsset, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateFieldIndexAttr(self, arg1: FieldAsset, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateFieldNameAttr(self, arg1: FieldAsset, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateFilePathAttr(self, arg1: FieldAsset, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateVectorDataRoleHintAttr(self, arg1: FieldAsset, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Get(self, stage: Stage, path: Path) -> FieldAsset: ...
    def GetFieldDataTypeAttr(self, arg1: FieldAsset) -> Attribute: ...
    def GetFieldIndexAttr(self, arg1: FieldAsset) -> Attribute: ...
    def GetFieldNameAttr(self, arg1: FieldAsset) -> Attribute: ...
    def GetFilePathAttr(self, arg1: FieldAsset) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def GetVectorDataRoleHintAttr(self, arg1: FieldAsset) -> Attribute: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: FieldAsset) -> object: ...
    def __reduce__(self) -> Any: ...

class FieldBase(pxr.UsdGeom.Xformable):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def Get(self, stage: Stage, path: Path) -> FieldBase: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: FieldBase) -> object: ...
    def __reduce__(self) -> Any: ...

class OpenVDBAsset(FieldAsset):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def CreateFieldClassAttr(self, arg1: OpenVDBAsset, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateFieldDataTypeAttr(self, arg1: OpenVDBAsset, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Define(self, stage: Stage, path: Path) -> OpenVDBAsset: ...
    def Get(self, stage: Stage, path: Path) -> OpenVDBAsset: ...
    def GetFieldClassAttr(self, arg1: OpenVDBAsset) -> Attribute: ...
    def GetFieldDataTypeAttr(self, arg1: OpenVDBAsset) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: OpenVDBAsset) -> object: ...
    def __reduce__(self) -> Any: ...

class Tokens(Boost.Python.instance):
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    @property
    def Color(self) -> Any: ...
    @property
    def Field3DAsset(self) -> Any: ...
    @property
    def FieldAsset(self) -> Any: ...
    @property
    def FieldBase(self) -> Any: ...
    @property
    def None_(self) -> Any: ...
    @property
    def Normal(self) -> Any: ...
    @property
    def OpenVDBAsset(self) -> Any: ...
    @property
    def Point(self) -> Any: ...
    @property
    def Vector(self) -> Any: ...
    @property
    def Volume(self) -> Any: ...
    @property
    def bool_(self) -> Any: ...
    @property
    def double2(self) -> Any: ...
    @property
    def double3(self) -> Any: ...
    @property
    def double_(self) -> Any: ...
    @property
    def field(self) -> Any: ...
    @property
    def fieldClass(self) -> Any: ...
    @property
    def fieldDataType(self) -> Any: ...
    @property
    def fieldIndex(self) -> Any: ...
    @property
    def fieldName(self) -> Any: ...
    @property
    def fieldPurpose(self) -> Any: ...
    @property
    def filePath(self) -> Any: ...
    @property
    def float2(self) -> Any: ...
    @property
    def float3(self) -> Any: ...
    @property
    def float_(self) -> Any: ...
    @property
    def fogVolume(self) -> Any: ...
    @property
    def half(self) -> Any: ...
    @property
    def half2(self) -> Any: ...
    @property
    def half3(self) -> Any: ...
    @property
    def int2(self) -> Any: ...
    @property
    def int3(self) -> Any: ...
    @property
    def int64(self) -> Any: ...
    @property
    def int_(self) -> Any: ...
    @property
    def levelSet(self) -> Any: ...
    @property
    def mask(self) -> Any: ...
    @property
    def matrix3d(self) -> Any: ...
    @property
    def matrix4d(self) -> Any: ...
    @property
    def quatd(self) -> Any: ...
    @property
    def staggered(self) -> Any: ...
    @property
    def string(self) -> Any: ...
    @property
    def uint(self) -> Any: ...
    @property
    def unknown(self) -> Any: ...
    @property
    def vectorDataRoleHint(self) -> Any: ...

class Volume(pxr.UsdGeom.Gprim):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def BlockFieldRelationship(self, arg1: Volume, name: object) -> bool: ...
    def CreateFieldRelationship(self, arg1: Volume, name: object, fieldPath: Path) -> bool: ...
    def Define(self, stage: Stage, path: Path) -> Volume: ...
    def Get(self, stage: Stage, path: Path) -> Volume: ...
    def GetFieldPath(self, arg1: Volume, name: object) -> Path: ...
    def GetFieldPaths(self, arg1: Volume) -> dict: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def HasFieldRelationship(self, arg1: Volume, name: object) -> bool: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: Volume) -> object: ...
    def __reduce__(self) -> Any: ...