import Boost.Python
import pxr.Usd
from typing import Any, ClassVar, overload

class ArticulationRootAPI(pxr.Usd.APISchemaBase):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def Apply(self, prim: Prim) -> ArticulationRootAPI: ...
    def CanApply(self, prim: Prim) -> _CanApplyResult: ...
    def Get(self, stage: Stage, path: Path) -> ArticulationRootAPI: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: ArticulationRootAPI) -> object: ...
    def __reduce__(self) -> Any: ...

class CollisionAPI(pxr.Usd.APISchemaBase):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def Apply(self, prim: Prim) -> CollisionAPI: ...
    def CanApply(self, prim: Prim) -> _CanApplyResult: ...
    def CreateCollisionEnabledAttr(self, arg1: CollisionAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateSimulationOwnerRel(self, arg1: CollisionAPI) -> Relationship: ...
    def Get(self, stage: Stage, path: Path) -> CollisionAPI: ...
    def GetCollisionEnabledAttr(self, arg1: CollisionAPI) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def GetSimulationOwnerRel(self, arg1: CollisionAPI) -> Relationship: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: CollisionAPI) -> object: ...
    def __reduce__(self) -> Any: ...

class CollisionGroup(pxr.Usd.Typed):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def ComputeCollisionGroupTable(self, stage: Stage) -> CollisionGroupTable: ...
    def CreateFilteredGroupsRel(self, arg1: CollisionGroup) -> Relationship: ...
    def CreateInvertFilteredGroupsAttr(self, arg1: CollisionGroup, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateMergeGroupNameAttr(self, arg1: CollisionGroup, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Define(self, stage: Stage, path: Path) -> CollisionGroup: ...
    def Get(self, stage: Stage, path: Path) -> CollisionGroup: ...
    def GetCollidersCollectionAPI(self, arg1: CollisionGroup) -> CollectionAPI: ...
    def GetFilteredGroupsRel(self, arg1: CollisionGroup) -> Relationship: ...
    def GetInvertFilteredGroupsAttr(self, arg1: CollisionGroup) -> Attribute: ...
    def GetMergeGroupNameAttr(self, arg1: CollisionGroup) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: CollisionGroup) -> object: ...
    def __reduce__(self) -> Any: ...

class CollisionGroupTable(Boost.Python.instance):
    __instance_size__: ClassVar[int] = ...
    def __init__(self, arg1: object) -> None: ...
    def GetGroups(self, arg1: CollisionGroupTable) -> list: ...
    def IsCollisionEnabled(self, arg1: CollisionGroupTable, arg2: object, arg3: object) -> bool: ...
    def __reduce__(self) -> Any: ...

class DistanceJoint(Joint):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def CreateMaxDistanceAttr(self, arg1: DistanceJoint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateMinDistanceAttr(self, arg1: DistanceJoint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Define(self, stage: Stage, path: Path) -> DistanceJoint: ...
    def Get(self, stage: Stage, path: Path) -> DistanceJoint: ...
    def GetMaxDistanceAttr(self, arg1: DistanceJoint) -> Attribute: ...
    def GetMinDistanceAttr(self, arg1: DistanceJoint) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: DistanceJoint) -> object: ...
    def __reduce__(self) -> Any: ...

class DriveAPI(pxr.Usd.APISchemaBase):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, arg2: Prim, arg3: object) -> None: ...
    @overload
    def __init__(self, arg1: object, arg2: SchemaBase, arg3: object) -> None: ...
    def Apply(self, prim: Prim, name: object) -> DriveAPI: ...
    def CanApply(self, prim: Prim, name: object) -> _CanApplyResult: ...
    def CreateDampingAttr(self, arg1: DriveAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateMaxForceAttr(self, arg1: DriveAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateStiffnessAttr(self, arg1: DriveAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateTargetPositionAttr(self, arg1: DriveAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateTargetVelocityAttr(self, arg1: DriveAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateTypeAttr(self, arg1: DriveAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    @overload
    def Get(self, stage: Stage, path: Path) -> DriveAPI: ...
    @overload
    def Get(self, prim: Prim, name: object) -> DriveAPI: ...
    def GetAll(self, prim: Prim) -> list: ...
    def GetDampingAttr(self, arg1: DriveAPI) -> Attribute: ...
    def GetMaxForceAttr(self, arg1: DriveAPI) -> Attribute: ...
    @overload
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    @overload
    def GetSchemaAttributeNames(self, arg1: bool, includeInherited: object) -> list: ...
    def GetStiffnessAttr(self, arg1: DriveAPI) -> Attribute: ...
    def GetTargetPositionAttr(self, arg1: DriveAPI) -> Attribute: ...
    def GetTargetVelocityAttr(self, arg1: DriveAPI) -> Attribute: ...
    def GetTypeAttr(self, arg1: DriveAPI) -> Attribute: ...
    def IsPhysicsDriveAPIPath(self, arg1: Path) -> bool: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: DriveAPI) -> object: ...
    def __reduce__(self) -> Any: ...

class FilteredPairsAPI(pxr.Usd.APISchemaBase):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def Apply(self, prim: Prim) -> FilteredPairsAPI: ...
    def CanApply(self, prim: Prim) -> _CanApplyResult: ...
    def CreateFilteredPairsRel(self, arg1: FilteredPairsAPI) -> Relationship: ...
    def Get(self, stage: Stage, path: Path) -> FilteredPairsAPI: ...
    def GetFilteredPairsRel(self, arg1: FilteredPairsAPI) -> Relationship: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: FilteredPairsAPI) -> object: ...
    def __reduce__(self) -> Any: ...

class FixedJoint(Joint):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def Define(self, stage: Stage, path: Path) -> FixedJoint: ...
    def Get(self, stage: Stage, path: Path) -> FixedJoint: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: FixedJoint) -> object: ...
    def __reduce__(self) -> Any: ...

class Joint(pxr.UsdGeom.Imageable):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def CreateBody0Rel(self, arg1: Joint) -> Relationship: ...
    def CreateBody1Rel(self, arg1: Joint) -> Relationship: ...
    def CreateBreakForceAttr(self, arg1: Joint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateBreakTorqueAttr(self, arg1: Joint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateCollisionEnabledAttr(self, arg1: Joint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateExcludeFromArticulationAttr(self, arg1: Joint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateJointEnabledAttr(self, arg1: Joint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateLocalPos0Attr(self, arg1: Joint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateLocalPos1Attr(self, arg1: Joint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateLocalRot0Attr(self, arg1: Joint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateLocalRot1Attr(self, arg1: Joint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Define(self, stage: Stage, path: Path) -> Joint: ...
    def Get(self, stage: Stage, path: Path) -> Joint: ...
    def GetBody0Rel(self, arg1: Joint) -> Relationship: ...
    def GetBody1Rel(self, arg1: Joint) -> Relationship: ...
    def GetBreakForceAttr(self, arg1: Joint) -> Attribute: ...
    def GetBreakTorqueAttr(self, arg1: Joint) -> Attribute: ...
    def GetCollisionEnabledAttr(self, arg1: Joint) -> Attribute: ...
    def GetExcludeFromArticulationAttr(self, arg1: Joint) -> Attribute: ...
    def GetJointEnabledAttr(self, arg1: Joint) -> Attribute: ...
    def GetLocalPos0Attr(self, arg1: Joint) -> Attribute: ...
    def GetLocalPos1Attr(self, arg1: Joint) -> Attribute: ...
    def GetLocalRot0Attr(self, arg1: Joint) -> Attribute: ...
    def GetLocalRot1Attr(self, arg1: Joint) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: Joint) -> object: ...
    def __reduce__(self) -> Any: ...

class LimitAPI(pxr.Usd.APISchemaBase):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, arg2: Prim, arg3: object) -> None: ...
    @overload
    def __init__(self, arg1: object, arg2: SchemaBase, arg3: object) -> None: ...
    def Apply(self, prim: Prim, name: object) -> LimitAPI: ...
    def CanApply(self, prim: Prim, name: object) -> _CanApplyResult: ...
    def CreateHighAttr(self, arg1: LimitAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateLowAttr(self, arg1: LimitAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    @overload
    def Get(self, stage: Stage, path: Path) -> LimitAPI: ...
    @overload
    def Get(self, prim: Prim, name: object) -> LimitAPI: ...
    def GetAll(self, prim: Prim) -> list: ...
    def GetHighAttr(self, arg1: LimitAPI) -> Attribute: ...
    def GetLowAttr(self, arg1: LimitAPI) -> Attribute: ...
    @overload
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    @overload
    def GetSchemaAttributeNames(self, arg1: bool, includeInherited: object) -> list: ...
    def IsPhysicsLimitAPIPath(self, arg1: Path) -> bool: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: LimitAPI) -> object: ...
    def __reduce__(self) -> Any: ...

class MassAPI(pxr.Usd.APISchemaBase):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def Apply(self, prim: Prim) -> MassAPI: ...
    def CanApply(self, prim: Prim) -> _CanApplyResult: ...
    def CreateCenterOfMassAttr(self, arg1: MassAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateDensityAttr(self, arg1: MassAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateDiagonalInertiaAttr(self, arg1: MassAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateMassAttr(self, arg1: MassAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreatePrincipalAxesAttr(self, arg1: MassAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Get(self, stage: Stage, path: Path) -> MassAPI: ...
    def GetCenterOfMassAttr(self, arg1: MassAPI) -> Attribute: ...
    def GetDensityAttr(self, arg1: MassAPI) -> Attribute: ...
    def GetDiagonalInertiaAttr(self, arg1: MassAPI) -> Attribute: ...
    def GetMassAttr(self, arg1: MassAPI) -> Attribute: ...
    def GetPrincipalAxesAttr(self, arg1: MassAPI) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: MassAPI) -> object: ...
    def __reduce__(self) -> Any: ...

class MassUnits(Boost.Python.instance):
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    @property
    def grams(self) -> Any: ...
    @property
    def kilograms(self) -> Any: ...
    @property
    def slugs(self) -> Any: ...

class MaterialAPI(pxr.Usd.APISchemaBase):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def Apply(self, prim: Prim) -> MaterialAPI: ...
    def CanApply(self, prim: Prim) -> _CanApplyResult: ...
    def CreateDensityAttr(self, arg1: MaterialAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateDynamicFrictionAttr(self, arg1: MaterialAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateRestitutionAttr(self, arg1: MaterialAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateStaticFrictionAttr(self, arg1: MaterialAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Get(self, stage: Stage, path: Path) -> MaterialAPI: ...
    def GetDensityAttr(self, arg1: MaterialAPI) -> Attribute: ...
    def GetDynamicFrictionAttr(self, arg1: MaterialAPI) -> Attribute: ...
    def GetRestitutionAttr(self, arg1: MaterialAPI) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def GetStaticFrictionAttr(self, arg1: MaterialAPI) -> Attribute: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: MaterialAPI) -> object: ...
    def __reduce__(self) -> Any: ...

class MeshCollisionAPI(pxr.Usd.APISchemaBase):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def Apply(self, prim: Prim) -> MeshCollisionAPI: ...
    def CanApply(self, prim: Prim) -> _CanApplyResult: ...
    def CreateApproximationAttr(self, arg1: MeshCollisionAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Get(self, stage: Stage, path: Path) -> MeshCollisionAPI: ...
    def GetApproximationAttr(self, arg1: MeshCollisionAPI) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: MeshCollisionAPI) -> object: ...
    def __reduce__(self) -> Any: ...

class PrismaticJoint(Joint):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def CreateAxisAttr(self, arg1: PrismaticJoint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateLowerLimitAttr(self, arg1: PrismaticJoint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateUpperLimitAttr(self, arg1: PrismaticJoint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Define(self, stage: Stage, path: Path) -> PrismaticJoint: ...
    def Get(self, stage: Stage, path: Path) -> PrismaticJoint: ...
    def GetAxisAttr(self, arg1: PrismaticJoint) -> Attribute: ...
    def GetLowerLimitAttr(self, arg1: PrismaticJoint) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def GetUpperLimitAttr(self, arg1: PrismaticJoint) -> Attribute: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: PrismaticJoint) -> object: ...
    def __reduce__(self) -> Any: ...

class RevoluteJoint(Joint):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def CreateAxisAttr(self, arg1: RevoluteJoint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateLowerLimitAttr(self, arg1: RevoluteJoint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateUpperLimitAttr(self, arg1: RevoluteJoint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Define(self, stage: Stage, path: Path) -> RevoluteJoint: ...
    def Get(self, stage: Stage, path: Path) -> RevoluteJoint: ...
    def GetAxisAttr(self, arg1: RevoluteJoint) -> Attribute: ...
    def GetLowerLimitAttr(self, arg1: RevoluteJoint) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def GetUpperLimitAttr(self, arg1: RevoluteJoint) -> Attribute: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: RevoluteJoint) -> object: ...
    def __reduce__(self) -> Any: ...

class RigidBodyAPI(pxr.Usd.APISchemaBase):
    class MassInformation(Boost.Python.instance):
        __instance_size__: ClassVar[int] = ...
        centerOfMass: Any
        inertia: Any
        localPos: Any
        localRot: Any
        volume: Any
        def __init__(self, arg1: object) -> None: ...
        def __reduce__(self) -> Any: ...
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def Apply(self, prim: Prim) -> RigidBodyAPI: ...
    def CanApply(self, prim: Prim) -> _CanApplyResult: ...
    def ComputeMassProperties(self, arg1: RigidBodyAPI, arg2: object) -> tuple: ...
    def CreateAngularVelocityAttr(self, arg1: RigidBodyAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateKinematicEnabledAttr(self, arg1: RigidBodyAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateRigidBodyEnabledAttr(self, arg1: RigidBodyAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateSimulationOwnerRel(self, arg1: RigidBodyAPI) -> Relationship: ...
    def CreateStartsAsleepAttr(self, arg1: RigidBodyAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateVelocityAttr(self, arg1: RigidBodyAPI, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Get(self, stage: Stage, path: Path) -> RigidBodyAPI: ...
    def GetAngularVelocityAttr(self, arg1: RigidBodyAPI) -> Attribute: ...
    def GetKinematicEnabledAttr(self, arg1: RigidBodyAPI) -> Attribute: ...
    def GetRigidBodyEnabledAttr(self, arg1: RigidBodyAPI) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def GetSimulationOwnerRel(self, arg1: RigidBodyAPI) -> Relationship: ...
    def GetStartsAsleepAttr(self, arg1: RigidBodyAPI) -> Attribute: ...
    def GetVelocityAttr(self, arg1: RigidBodyAPI) -> Attribute: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: RigidBodyAPI) -> object: ...
    def __reduce__(self) -> Any: ...

class Scene(pxr.Usd.Typed):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def CreateGravityDirectionAttr(self, arg1: Scene, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateGravityMagnitudeAttr(self, arg1: Scene, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Define(self, stage: Stage, path: Path) -> Scene: ...
    def Get(self, stage: Stage, path: Path) -> Scene: ...
    def GetGravityDirectionAttr(self, arg1: Scene) -> Attribute: ...
    def GetGravityMagnitudeAttr(self, arg1: Scene) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: Scene) -> object: ...
    def __reduce__(self) -> Any: ...

class SphericalJoint(Joint):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def CreateAxisAttr(self, arg1: SphericalJoint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateConeAngle0LimitAttr(self, arg1: SphericalJoint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def CreateConeAngle1LimitAttr(self, arg1: SphericalJoint, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Define(self, stage: Stage, path: Path) -> SphericalJoint: ...
    def Get(self, stage: Stage, path: Path) -> SphericalJoint: ...
    def GetAxisAttr(self, arg1: SphericalJoint) -> Attribute: ...
    def GetConeAngle0LimitAttr(self, arg1: SphericalJoint) -> Attribute: ...
    def GetConeAngle1LimitAttr(self, arg1: SphericalJoint) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: SphericalJoint) -> object: ...
    def __reduce__(self) -> Any: ...

class Tokens(Boost.Python.instance):
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    @property
    def PhysicsArticulationRootAPI(self) -> Any: ...
    @property
    def PhysicsCollisionAPI(self) -> Any: ...
    @property
    def PhysicsCollisionGroup(self) -> Any: ...
    @property
    def PhysicsDistanceJoint(self) -> Any: ...
    @property
    def PhysicsDriveAPI(self) -> Any: ...
    @property
    def PhysicsFilteredPairsAPI(self) -> Any: ...
    @property
    def PhysicsFixedJoint(self) -> Any: ...
    @property
    def PhysicsJoint(self) -> Any: ...
    @property
    def PhysicsLimitAPI(self) -> Any: ...
    @property
    def PhysicsMassAPI(self) -> Any: ...
    @property
    def PhysicsMaterialAPI(self) -> Any: ...
    @property
    def PhysicsMeshCollisionAPI(self) -> Any: ...
    @property
    def PhysicsPrismaticJoint(self) -> Any: ...
    @property
    def PhysicsRevoluteJoint(self) -> Any: ...
    @property
    def PhysicsRigidBodyAPI(self) -> Any: ...
    @property
    def PhysicsScene(self) -> Any: ...
    @property
    def PhysicsSphericalJoint(self) -> Any: ...
    @property
    def acceleration(self) -> Any: ...
    @property
    def angular(self) -> Any: ...
    @property
    def boundingCube(self) -> Any: ...
    @property
    def boundingSphere(self) -> Any: ...
    @property
    def colliders(self) -> Any: ...
    @property
    def convexDecomposition(self) -> Any: ...
    @property
    def convexHull(self) -> Any: ...
    @property
    def distance(self) -> Any: ...
    @property
    def drive(self) -> Any: ...
    @property
    def drive_MultipleApplyTemplate_PhysicsDamping(self) -> Any: ...
    @property
    def drive_MultipleApplyTemplate_PhysicsMaxForce(self) -> Any: ...
    @property
    def drive_MultipleApplyTemplate_PhysicsStiffness(self) -> Any: ...
    @property
    def drive_MultipleApplyTemplate_PhysicsTargetPosition(self) -> Any: ...
    @property
    def drive_MultipleApplyTemplate_PhysicsTargetVelocity(self) -> Any: ...
    @property
    def drive_MultipleApplyTemplate_PhysicsType(self) -> Any: ...
    @property
    def force(self) -> Any: ...
    @property
    def kilogramsPerUnit(self) -> Any: ...
    @property
    def limit(self) -> Any: ...
    @property
    def limit_MultipleApplyTemplate_PhysicsHigh(self) -> Any: ...
    @property
    def limit_MultipleApplyTemplate_PhysicsLow(self) -> Any: ...
    @property
    def linear(self) -> Any: ...
    @property
    def meshSimplification(self) -> Any: ...
    @property
    def none(self) -> Any: ...
    @property
    def physicsAngularVelocity(self) -> Any: ...
    @property
    def physicsApproximation(self) -> Any: ...
    @property
    def physicsAxis(self) -> Any: ...
    @property
    def physicsBody0(self) -> Any: ...
    @property
    def physicsBody1(self) -> Any: ...
    @property
    def physicsBreakForce(self) -> Any: ...
    @property
    def physicsBreakTorque(self) -> Any: ...
    @property
    def physicsCenterOfMass(self) -> Any: ...
    @property
    def physicsCollisionEnabled(self) -> Any: ...
    @property
    def physicsConeAngle0Limit(self) -> Any: ...
    @property
    def physicsConeAngle1Limit(self) -> Any: ...
    @property
    def physicsDensity(self) -> Any: ...
    @property
    def physicsDiagonalInertia(self) -> Any: ...
    @property
    def physicsDynamicFriction(self) -> Any: ...
    @property
    def physicsExcludeFromArticulation(self) -> Any: ...
    @property
    def physicsFilteredGroups(self) -> Any: ...
    @property
    def physicsFilteredPairs(self) -> Any: ...
    @property
    def physicsGravityDirection(self) -> Any: ...
    @property
    def physicsGravityMagnitude(self) -> Any: ...
    @property
    def physicsInvertFilteredGroups(self) -> Any: ...
    @property
    def physicsJointEnabled(self) -> Any: ...
    @property
    def physicsKinematicEnabled(self) -> Any: ...
    @property
    def physicsLocalPos0(self) -> Any: ...
    @property
    def physicsLocalPos1(self) -> Any: ...
    @property
    def physicsLocalRot0(self) -> Any: ...
    @property
    def physicsLocalRot1(self) -> Any: ...
    @property
    def physicsLowerLimit(self) -> Any: ...
    @property
    def physicsMass(self) -> Any: ...
    @property
    def physicsMaxDistance(self) -> Any: ...
    @property
    def physicsMergeGroup(self) -> Any: ...
    @property
    def physicsMinDistance(self) -> Any: ...
    @property
    def physicsPrincipalAxes(self) -> Any: ...
    @property
    def physicsRestitution(self) -> Any: ...
    @property
    def physicsRigidBodyEnabled(self) -> Any: ...
    @property
    def physicsSimulationOwner(self) -> Any: ...
    @property
    def physicsStartsAsleep(self) -> Any: ...
    @property
    def physicsStaticFriction(self) -> Any: ...
    @property
    def physicsUpperLimit(self) -> Any: ...
    @property
    def physicsVelocity(self) -> Any: ...
    @property
    def rotX(self) -> Any: ...
    @property
    def rotY(self) -> Any: ...
    @property
    def rotZ(self) -> Any: ...
    @property
    def transX(self) -> Any: ...
    @property
    def transY(self) -> Any: ...
    @property
    def transZ(self) -> Any: ...
    @property
    def x(self) -> Any: ...
    @property
    def y(self) -> Any: ...
    @property
    def z(self) -> Any: ...

class _CanApplyResult(Boost.Python.instance):
    __instance_size__: ClassVar[int] = ...
    def __init__(self, arg1: object, arg2: bool, arg3: object) -> None: ...
    def __bool__(self, arg1: _CanApplyResult) -> bool: ...
    @overload
    def __eq__(self, arg1: _CanApplyResult, arg2: bool) -> object: ...
    @overload
    def __eq__(self, arg1: _CanApplyResult, arg2: bool) -> object: ...
    def __getitem__(self, arg1: _CanApplyResult, arg2: int) -> object: ...
    @overload
    def __ne__(self, arg1: _CanApplyResult, arg2: bool) -> object: ...
    @overload
    def __ne__(self, arg1: _CanApplyResult, arg2: bool) -> object: ...
    def __reduce__(self) -> Any: ...
    @property
    def whyNot(self) -> Any: ...

def GetStageKilogramsPerUnit(stage: Stage) -> float: ...
def MassUnitsAre(authoredUnits: float, standardUnits: float, epsilon: float = ...) -> bool: ...
def SetStageKilogramsPerUnit(stage: Stage, metersPerUnit: float) -> bool: ...
def StageHasAuthoredKilogramsPerUnit(stage: Stage) -> bool: ...