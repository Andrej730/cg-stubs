import Boost.Python
from typing import Any

class Registry(Boost.Python.instance):
    def __init__(self, tupleargs, dictkwds) -> None: ...
    @classmethod
    def GetAllKinds(cls) -> list: ...
    @classmethod
    def GetBaseKind(cls, arg1: object) -> Any: ...
    @classmethod
    def HasKind(cls, arg1: object) -> bool: ...
    @classmethod
    def IsA(cls, arg1: object, arg2: object) -> bool: ...
    def __bool__(self) -> bool: ...
    def __eq__(self, other: object) -> bool: ...
    def __lt__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...
    def __reduce__(self) -> Any: ...
    @property
    def expired(self) -> Any: ...

class Tokens(Boost.Python.instance):
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    @property
    def assembly(self) -> Any: ...
    @property
    def component(self) -> Any: ...
    @property
    def group(self) -> Any: ...
    @property
    def model(self) -> Any: ...
    @property
    def subcomponent(self) -> Any: ...