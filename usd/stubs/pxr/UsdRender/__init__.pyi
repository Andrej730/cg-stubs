import Boost.Python
import pxr.Usd
from typing import Any, ClassVar, overload

class DenoisePass(pxr.Usd.Typed):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, prim: pxr.Usd.Prim) -> None: ...
    @overload
    def __init__(self, schemaObj: pxr.Usd.SchemaBase) -> None: ...
    @classmethod
    def Define(cls, stage: pxr.Usd.Stage, path: pxr.Sdf.Path) -> DenoisePass: ...
    @classmethod
    def Get(cls, stage: pxr.Usd.Stage, path: pxr.Sdf.Path) -> DenoisePass: ...
    @classmethod
    def GetSchemaAttributeNames(cls, includeInherited: bool = ...) -> list[str]: ...
    @classmethod
    def _GetStaticTfType(cls) -> pxr.Tf.Type: ...
    def __bool__(self) -> bool: ...
    def __reduce__(self) -> Any: ...

class Pass(pxr.Usd.Typed):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, prim: pxr.Usd.Prim) -> None: ...
    @overload
    def __init__(self, schemaObj: pxr.Usd.SchemaBase) -> None: ...
    def CreateCommandAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreateDenoiseEnableAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreateDenoisePassRel(self) -> pxr.Usd.Relationship: ...
    def CreateFileNameAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreateInputPassesRel(self) -> pxr.Usd.Relationship: ...
    def CreatePassTypeAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreateRenderSourceRel(self) -> pxr.Usd.Relationship: ...
    @classmethod
    def Define(cls, stage: pxr.Usd.Stage, path: pxr.Sdf.Path) -> Pass: ...
    @classmethod
    def Get(cls, stage: pxr.Usd.Stage, path: pxr.Sdf.Path) -> Pass: ...
    def GetCommandAttr(self) -> pxr.Usd.Attribute: ...
    def GetDenoiseEnableAttr(self) -> pxr.Usd.Attribute: ...
    def GetDenoisePassRel(self) -> pxr.Usd.Relationship: ...
    def GetFileNameAttr(self) -> pxr.Usd.Attribute: ...
    def GetInputPassesRel(self) -> pxr.Usd.Relationship: ...
    def GetPassTypeAttr(self) -> pxr.Usd.Attribute: ...
    def GetRenderSourceRel(self) -> pxr.Usd.Relationship: ...
    def GetRenderVisibilityCollectionAPI(self) -> pxr.Usd.CollectionAPI: ...
    @classmethod
    def GetSchemaAttributeNames(cls, includeInherited: bool = ...) -> list[str]: ...
    @classmethod
    def _GetStaticTfType(cls) -> pxr.Tf.Type: ...
    def __bool__(self) -> bool: ...
    def __reduce__(self) -> Any: ...

class Product(SettingsBase):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, prim: pxr.Usd.Prim) -> None: ...
    @overload
    def __init__(self, schemaObj: pxr.Usd.SchemaBase) -> None: ...
    def CreateOrderedVarsRel(self) -> pxr.Usd.Relationship: ...
    def CreateProductNameAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreateProductTypeAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    @classmethod
    def Define(cls, stage: pxr.Usd.Stage, path: pxr.Sdf.Path) -> Product: ...
    @classmethod
    def Get(cls, stage: pxr.Usd.Stage, path: pxr.Sdf.Path) -> Product: ...
    def GetOrderedVarsRel(self) -> pxr.Usd.Relationship: ...
    def GetProductNameAttr(self) -> pxr.Usd.Attribute: ...
    def GetProductTypeAttr(self) -> pxr.Usd.Attribute: ...
    @classmethod
    def GetSchemaAttributeNames(cls, includeInherited: bool = ...) -> list[str]: ...
    @classmethod
    def _GetStaticTfType(cls) -> pxr.Tf.Type: ...
    def __bool__(self) -> bool: ...
    def __reduce__(self) -> Any: ...

class Settings(SettingsBase):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, prim: pxr.Usd.Prim) -> None: ...
    @overload
    def __init__(self, schemaObj: pxr.Usd.SchemaBase) -> None: ...
    def CreateIncludedPurposesAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreateMaterialBindingPurposesAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreateProductsRel(self) -> pxr.Usd.Relationship: ...
    def CreateRenderingColorSpaceAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    @classmethod
    def Define(cls, stage: pxr.Usd.Stage, path: pxr.Sdf.Path) -> Settings: ...
    @classmethod
    def Get(cls, stage: pxr.Usd.Stage, path: pxr.Sdf.Path) -> Settings: ...
    def GetIncludedPurposesAttr(self) -> pxr.Usd.Attribute: ...
    def GetMaterialBindingPurposesAttr(self) -> pxr.Usd.Attribute: ...
    def GetProductsRel(self) -> pxr.Usd.Relationship: ...
    def GetRenderingColorSpaceAttr(self) -> pxr.Usd.Attribute: ...
    @classmethod
    def GetSchemaAttributeNames(cls, includeInherited: bool = ...) -> list[str]: ...
    @classmethod
    def GetStageRenderSettings(cls, arg1: pxr.Usd.Stage) -> Settings: ...
    @classmethod
    def _GetStaticTfType(cls) -> pxr.Tf.Type: ...
    def __bool__(self) -> bool: ...
    def __reduce__(self) -> Any: ...

class SettingsBase(pxr.Usd.Typed):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, prim: pxr.Usd.Prim) -> None: ...
    @overload
    def __init__(self, schemaObj: pxr.Usd.SchemaBase) -> None: ...
    def CreateAspectRatioConformPolicyAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreateCameraRel(self) -> pxr.Usd.Relationship: ...
    def CreateDataWindowNDCAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreateDisableMotionBlurAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreateInstantaneousShutterAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreatePixelAspectRatioAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreateResolutionAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    @classmethod
    def Get(cls, stage: pxr.Usd.Stage, path: pxr.Sdf.Path) -> SettingsBase: ...
    def GetAspectRatioConformPolicyAttr(self) -> pxr.Usd.Attribute: ...
    def GetCameraRel(self) -> pxr.Usd.Relationship: ...
    def GetDataWindowNDCAttr(self) -> pxr.Usd.Attribute: ...
    def GetDisableMotionBlurAttr(self) -> pxr.Usd.Attribute: ...
    def GetInstantaneousShutterAttr(self) -> pxr.Usd.Attribute: ...
    def GetPixelAspectRatioAttr(self) -> pxr.Usd.Attribute: ...
    def GetResolutionAttr(self) -> pxr.Usd.Attribute: ...
    @classmethod
    def GetSchemaAttributeNames(cls, includeInherited: bool = ...) -> list[str]: ...
    @classmethod
    def _GetStaticTfType(cls) -> pxr.Tf.Type: ...
    def __bool__(self) -> bool: ...
    def __reduce__(self) -> Any: ...

class Tokens(Boost.Python.instance):
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    @property
    def RenderDenoisePass(self) -> Any: ...
    @property
    def RenderPass(self) -> Any: ...
    @property
    def RenderProduct(self) -> Any: ...
    @property
    def RenderSettings(self) -> Any: ...
    @property
    def RenderSettingsBase(self) -> Any: ...
    @property
    def RenderVar(self) -> Any: ...
    @property
    def adjustApertureHeight(self) -> Any: ...
    @property
    def adjustApertureWidth(self) -> Any: ...
    @property
    def adjustPixelAspectRatio(self) -> Any: ...
    @property
    def aspectRatioConformPolicy(self) -> Any: ...
    @property
    def camera(self) -> Any: ...
    @property
    def collectionRenderVisibilityIncludeRoot(self) -> Any: ...
    @property
    def color3f(self) -> Any: ...
    @property
    def command(self) -> Any: ...
    @property
    def cropAperture(self) -> Any: ...
    @property
    def dataType(self) -> Any: ...
    @property
    def dataWindowNDC(self) -> Any: ...
    @property
    def denoiseEnable(self) -> Any: ...
    @property
    def denoisePass(self) -> Any: ...
    @property
    def disableMotionBlur(self) -> Any: ...
    @property
    def expandAperture(self) -> Any: ...
    @property
    def fileName(self) -> Any: ...
    @property
    def full(self) -> Any: ...
    @property
    def includedPurposes(self) -> Any: ...
    @property
    def inputPasses(self) -> Any: ...
    @property
    def instantaneousShutter(self) -> Any: ...
    @property
    def intrinsic(self) -> Any: ...
    @property
    def lpe(self) -> Any: ...
    @property
    def materialBindingPurposes(self) -> Any: ...
    @property
    def orderedVars(self) -> Any: ...
    @property
    def passType(self) -> Any: ...
    @property
    def pixelAspectRatio(self) -> Any: ...
    @property
    def preview(self) -> Any: ...
    @property
    def primvar(self) -> Any: ...
    @property
    def productName(self) -> Any: ...
    @property
    def productType(self) -> Any: ...
    @property
    def products(self) -> Any: ...
    @property
    def raster(self) -> Any: ...
    @property
    def raw(self) -> Any: ...
    @property
    def renderSettingsPrimPath(self) -> Any: ...
    @property
    def renderSource(self) -> Any: ...
    @property
    def renderVisibility(self) -> Any: ...
    @property
    def renderingColorSpace(self) -> Any: ...
    @property
    def resolution(self) -> Any: ...
    @property
    def sourceName(self) -> Any: ...
    @property
    def sourceType(self) -> Any: ...

class Var(pxr.Usd.Typed):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, prim: pxr.Usd.Prim) -> None: ...
    @overload
    def __init__(self, schemaObj: pxr.Usd.SchemaBase) -> None: ...
    def CreateDataTypeAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreateSourceNameAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    def CreateSourceTypeAttr(self, defaultValue: Any = ..., writeSparsely: bool = ...) -> pxr.Usd.Attribute: ...
    @classmethod
    def Define(cls, stage: pxr.Usd.Stage, path: pxr.Sdf.Path) -> Var: ...
    @classmethod
    def Get(cls, stage: pxr.Usd.Stage, path: pxr.Sdf.Path) -> Var: ...
    def GetDataTypeAttr(self) -> pxr.Usd.Attribute: ...
    @classmethod
    def GetSchemaAttributeNames(cls, includeInherited: bool = ...) -> list[str]: ...
    def GetSourceNameAttr(self) -> pxr.Usd.Attribute: ...
    def GetSourceTypeAttr(self) -> pxr.Usd.Attribute: ...
    @classmethod
    def _GetStaticTfType(cls) -> pxr.Tf.Type: ...
    def __bool__(self) -> bool: ...
    def __reduce__(self) -> Any: ...