import Boost.Python
import pxr.UsdGeom
from typing import Any, ClassVar, overload

class GenerativeProcedural(pxr.UsdGeom.Boundable):
    __instance_size__: ClassVar[int] = ...
    @overload
    def __init__(self, arg1: object) -> None: ...
    @overload
    def __init__(self, arg1: object, prim: Prim) -> None: ...
    @overload
    def __init__(self, arg1: object, schemaObj: SchemaBase) -> None: ...
    def CreateProceduralSystemAttr(self, arg1: GenerativeProcedural, defaultValue: object = ..., writeSparsely: bool = ...) -> Attribute: ...
    def Define(self, stage: Stage, path: Path) -> GenerativeProcedural: ...
    def Get(self, stage: Stage, path: Path) -> GenerativeProcedural: ...
    def GetProceduralSystemAttr(self, arg1: GenerativeProcedural) -> Attribute: ...
    def GetSchemaAttributeNames(self, includeInherited: bool = ...) -> list: ...
    def _GetStaticTfType(self) -> Type: ...
    def __bool__(self, arg1: GenerativeProcedural) -> object: ...
    def __reduce__(self) -> Any: ...

class Tokens(Boost.Python.instance):
    def __init__(self, *args, **kwargs) -> None: ...
    def __reduce__(self) -> Any: ...
    @property
    def GenerativeProcedural(self) -> Any: ...
    @property
    def proceduralSystem(self) -> Any: ...